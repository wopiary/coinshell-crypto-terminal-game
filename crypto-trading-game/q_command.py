import os
import time
import sys
import random
import threading
import fake_news
import line_graph
import string
from datetime import datetime

#GLOBAL
user_wallet = {
       'balance': 999999.00
}
Name = None
# coin_prices = [random.uniform(1.0, 1000.0) for _ in range(14)]
bag = {
      'coins_owned': []
}
black_market_page_product_category = [
    "Crypto Exchange",
    "Compromised Coinshell Accounts",
    "Misc. Black Market Goods",
    "Exit Silk Claw"
]
bag_black_market = {
      'crypto_coin' : []
}


#QUICKSCENE, THORNE NTRODUCES HIMSELF TO THE PLAYER AND ASK FOR NAME
def quick_scene(text, delay):
    os.system('cls' if os.name=='nt' else 'clear')
    for character in text:
        sys.stdout.write(character)
        sys.stdout.flush()
        time.sleep(delay)
    print()
# ceo_message = """
#            ‚¢Ä‚†§‚†ê‚†≤‚£¶‚†Ä‚†Ä‚†Ä‚†ê‚°ç‚†•‚†Ç‚†Ä‚†Ä‚†Ä Thorne:   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä              Alright, listen up. The name's Thorne. CEO of this whole damn operation. You're stepping into the arena now, kid,
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£¶‚°Ä‚††‚†õ‚£ß‚°Ä‚£Ä‚†ê‚¢ë‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                       and in this game of crypto, where fortunes are made and lost faster than a blink, you gotta know who's on your side.
# ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°Ñ‚†Ä‚†Ä‚†à‚†£‚°ª‚£ø‚†¶‚†ê‚†í‚†ö‚†â‚†£‚†Ä‚†Ä‚†Å‚¢ï‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                       More importantly, you gotta know who you're dealing with. Every transaction, every trade, every whisper of a coin's 
# ‚†Ä‚°†‚°î‚†í‚†É‚¢£‚¢Ä‚£Ä‚†Ä‚¢†‚¢ä‚†Ü‚†Å‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†ä‚°ò‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                       rise or fall... it all comes down to trust. Or the lack thereof.
# ‚¢Ü‚††‚†§‚†Ä‚††‚£¶‚£ø‚£ø‚£ø‚£æ‚£æ‚£Å‚°Ä‚£Ä‚°†‚†Ä‚¢à‚£à‚°â‚†É‚†Ä‚¢†‚°¢‚£ö‚°Æ‚¢ñ‚¢Ñ‚†Ä‚†Ä‚†Ä                       So, before we dive headfirst into this digital gold rush, let's get one thing straight.
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ª‚£ø‚£ø‚£ø‚£ø‚°Æ‚†î‚£Ç‚†°‚£¨‚£§‚£§‚£¥‚£ø‚£ø‚£æ‚†Å‚†Ä‚†ô‚¢ï‚£Ñ‚†Ä
# ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ß‚†ì‚†Ä‚¢ä‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†µ                        """ #delete the following ceo_message, replace with this after you done
ceo_message = """
           yr
        """






def users_name_info():
    global Name
    user_name = input("""       
                                                      What's your name, hotshot? """).strip().capitalize()
    Name = user_name
    return Name

def coin_purchase_prices_updates(): 
      global coin_prices_low_range, coin_prices_mid_range, coin_prices_high_range
      coin_prices_low_range = [random.uniform(0.01, 5.0) for _ in range(3)]
      coin_prices_mid_range = [random.uniform(10, 500) for _ in range(4)]
      coin_prices_high_range = [random.uniform(1001,70000) for _ in range(3)]
      
coin_purchase_prices_updates()

def coins_sell_prices_updates():
     global coin_sell_prices_low_range, coin_sell_prices_mid_range, coin_sell_prices_high_range
     coin_sell_prices_low_range = [round(random.uniform(0.005, 4.8000), 4) for _ in range(3)]
     coin_sell_prices_mid_range = [round(random.uniform(8.5000, 480.0000), 4) for _ in range(4)]
     coin_sell_prices_high_range = [round(random.uniform(950.0000, 68000.0000), 4) for _ in range(3)]
     
coins_sell_prices_updates()


# 'B' COMMAND

def black_market_page_generate_key(length =6):
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=length))


def black_market_page():
    os.system('cls' if os.name == 'nt' else 'clear')
    global session_code_first_num, session_code_letters, session_code_second_num, sections
    
    
#     # # Spooky loading effect
    # print("    üåê Initiating secure connection to darknet terminal...")
    # time.sleep(2)
    # os.system('cls' if os.name == 'nt' else 'clear') 
    # print("    üîê Authenticating user credentials...")
    # time.sleep(2)
    # os.system('cls' if os.name == 'nt' else 'clear')
    # print("    üëÅÔ∏è  Synchronizing with decentralized nodes...")
    # time.sleep(1.5)
    # os.system('cls' if os.name == 'nt' else 'clear')

    # print("    ‚ö° Connection established. Welcome to the Market!")
    # time.sleep(2)
    # os.system('cls' if os.name == 'nt' else 'clear')


    session_code_first_num = random.randint(1,9)
    session_code_second_num = random.randint(10,99)
    session_code_letters = ''.join(random.choices(string.ascii_uppercase, k=3))
    account_num = random.randint(1000,9999)

    access_keys = {black_market_page_generate_key(): category for category in black_market_page_product_category}

    print(f"""
‚†Ä‚†Ä‚†Ä
            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚¢§‚£†‚£∂‚£ø‚£ø‚°ø‚†ø‚†õ‚†õ‚†õ‚†õ‚†â‚†õ‚†õ‚†õ‚†õ‚†ø‚£∑‚°¶‚†û‚£©‚£∂‚£∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
            ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚°§‚£å‚†ô‚†ª‚£Ö‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†î‚†ã‚¢Ä‚£æ‚£ø‚£ø‚†É‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
            ‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚°ü‚¢á‚¢ª‚£ß‚†Ñ‚†Ä‚†à‚¢ì‚°¢‚†¥‚†í‚†í‚†í‚†í‚°≤‚†ö‚†Å‚†Ä‚†ê‚£™‚£ø‚£ø‚°ø‚°Ñ‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
            ‚†Ä‚†Ä‚†Ä‚£†‚£ø‚£ø‚†ü‚†Å‚†∏‚°º‚£ø‚°Ç‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†π‚£ø‚£ß‚¢≥‚°è‚†π‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä
            ‚†Ä‚†Ä‚£∞‚£ø‚°ø‚†É‚†Ä‚†Ä‚†Ä‚¢ß‚†ë‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚†á‚°∏‚†Ä‚†Ä‚†ò‚¢ø‚£¶‚£Ñ‚†Ä‚†Ä
            ‚†Ä‚¢∞‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°†‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚°á‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£Ü‚†Ä
            ‚†Ä‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†á‚†Ä‚¢∫‚°á‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£∂‚£Ä‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚°Ä
            ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ω‚†Ä‚¢Ä‚°à‚†â‚¢Å‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†â‚£â‚†Å‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°á
            ‚¢∏‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚††‚†Ä‚†à‚¢ß‚°Ä‚†Ä‚†Ä‚†Ä‚†π‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚°á
            ‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†Ä‚†ô‚¢¶‚£Ä‚††‚†ä‚†â‚†Ç‚†Ñ‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£§‚°æ‚†ò‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚°á
            ‚†ò‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†ú‚†≥‚£§‚°Ä‚†Ä‚†Ä‚£Ä‚£§‚°§‚£∂‚£æ‚£ø‚£ø‚£ø‚†ü‚†Å‚†Ä‚†Ä‚°∏‚¢¶‚£Ñ‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚†á
            ‚†Ä‚¢ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£§‚†û‚†Ä‚†Ä‚†Ä‚†ô‚†Å‚†ô‚†â‚†Ä‚†Ä‚†∏‚£õ‚°ø‚†â‚†Ä‚†Ä‚†Ä‚¢Ä‚°ú‚†Ä‚†Ä‚†à‚†ô‚†¢‚£º‚£ø‚°ø‚†Ä
            ‚†Ä‚†à‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚¢∞‚†ã‚†°‚°á‚†Ä‚°Ä‚£Ä‚£§‚¢¢‚£§‚£§‚£Ä‚†Ä‚†Ä‚£æ‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚£ø‚†Å‚†Ä
      ‚†Ä‚†Ä‚†Ä
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
     ‚ñà‚ñà‚ñà‚ñà  SILK CLAW MARKETPLACE v3.1  ‚ñà‚ñà‚ñà‚ñà   [SECURE NODE: ACTIVE]
 ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
      Session: #{session_code_letters}{session_code_first_num}-{session_code_second_num} ‚îÇ Encrypted Route: ONION://v3
      Account: ANON-{account_num} ‚îÇ Clearance Level: OMEGA | Inventory: {bag_black_market['crypto_coin']}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      """)
    
    for key, section in access_keys.items():
      print(f"?  {key}   ‚Äì {section}")

    black_market_page_choice = input("""
Enter Access Key to Proceed:
""")
    
    if black_market_page_choice in access_keys:
        section = access_keys[black_market_page_choice]
        print(f"\n[ACCESS GRANTED] Redirecting to {section}...\n")

    if section == 'Crypto Exchange':
        black_market_page_crypto_coin()

    elif section =='Exit Silk Claw':
         return 'back'
        
    else:
        print("\n[ACCESS DENIED] Invalid key. Disconnecting...\n")
        return black_market_page()




def black_market_page_crypto_coin():

            os.system('cls' if os.name=='nt' else 'clear')
            global  bm_crypto_exchange_page_coin_prices
            bm_crypto_exchange_page_coin_names = [
            "üï± Shadowcoin (SHC)",
            "‚öì Dreadnaught (DNT)",
            "üêç Chimera (CMR)",
            "‚ú¥ Aetherium (AET)",
            "üåë Aphelion (APH)"
        ]
            bm_crypto_exchange_page_coin_prices = [random.uniform(5000,99999) for _ in range(6)]
            bm_crypto_exchange_page_coin_value = [random.uniform(-99999,99999) for _ in range(6)]
            print(f"""

        ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ã‚†Ä‚¢Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†Å‚¢Ä‚£†‚£∂‚£ø‚°ü
        ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†õ‚†Å‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†â‚†â‚†ô‚†õ‚†õ‚†õ‚†ø‚†ã‚†Ä‚£Ä‚£¥‚£ø‚£ø‚£ø‚†ã‚£∞
        ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚†Ä‚°Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚£©‚£§‚†Ñ‚£†‚£∂‚£∂‚°∂‚¢Ä‚£§‚°Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚°ø‚¢É‚£º‚£ø
        ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†ê‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚£¥‚£ø‚¢É‚£æ‚£ø‚£ø‚¢ã‚£¥‚£ø‚†ü‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Å‚†æ‚†ø‚£ø
        ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∏‚£ø‚¢É‚£æ‚£ø‚£ø‚¢É‚£æ‚£ø‚†è‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¥‚†ã‚£†‚£ø
        ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ã‚†â‚†â‚†Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£†‚£æ‚£ø‚£ø‚£ß‚°ò‚†ø‚†ã‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚°ô‚£ø
        ‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Å‚†Ä‚†à‚†â‚†õ‚†è‚†Ä‚£¥‚£§‚£¥‚£ø‚£ø‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£å
        ‚£ø‚£ø‚°ø‚†ã‚†â‚†Å‚¢Ä‚£ø‚°É‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚£ø‚£ø‚£ø‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†ø‚†ø‚†ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†Å‚†Å‚†Ä‚†â‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚£ø‚†ã‚†Ä‚£†‚£∂‚£∑‚£æ‚£ø‚£ø‚£ø‚£Ñ‚†≤‚£§‚£Ä‚†Ä‚†à‚†ô‚†ø‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚£†‚°û‚£©‚£¥‚£æ‚£ø‚£ø‚£ø‚£∂‚£¨‚£õ‚¢ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚°á‚†Ä‚£¥‚£ø‚°ø‚†â‚†â‚†â‚†ª‚£ø‚£ø‚£á‚††‚¢â‚†ª‚¢¶‚£Ñ‚†Ä‚†à‚†ª‚¢∑‚£∂‚£ø‚°è‚£æ‚°Ä‚†ø‚£ø‚°ø‚†ª‚£ø‚£ø‚£ø‚†õ‚£ß‚°π‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚°á‚†Ä‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚°ø‚¢∏‚£∑‚£¨‚°Ç‚¢ç‚†ª‚¢∂‚£Ñ‚°Ä‚†â‚†õ‚¢∑‚£ø‚£∑‚£¶‚£§‚£¥‚£¶‚£à‚£â‚£Å‚£†‚£æ‚°á‚£ø‚£ø‚£¶‚£Ä‚†Ä‚†Ä‚¢Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚°á‚†Ä‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚£†‚£ø‚£ø‚£ß‚¢∏‚£ø‚£ø‚£ø‚£∑‚£¨‚£ê‚£¨‚°ô‚†¢‚†Ä‚†Ä‚†à‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚°á‚†Ä‚£ø‚£ø‚£ø‚£ø‚†ø‚¢ø‚°ø‚†ø‚†ø‚†ü‚¢º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚†Ä‚£∑‚†Ä‚°Ñ‚†Ä‚†à‚†õ‚†õ‚†õ‚†õ‚†ø‚†ø‚£´‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚°á‚†Ä‚£ø‚°õ‚¢π‚£á‚†Ä‚£†‚°è‚¢ò‚£ø‚£ø‚£∂‚£å‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚£ø‚†Ä‚°á‚¢∞‚°Ü‚£Ñ‚†Ä‚†Ä‚¢§‚°Ä‚†Ä‚†ò‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚°á‚†Ä‚¢ª‚£∑‚£§‚£ô‚£õ‚£ã‚£¥‚£ø‚†ø‚†ü‚£ø‚£ø‚¢∏‚†Ä‚°Ü‚¢à‚¢ô‚†ª‚¢ø‚£ø‚†Ä‚†ø‚†Ä‚£ø‚¢∏‚°á‚£ø‚†Ä‚£Ü‚¢†‚£à‚†É‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
        ‚£á‚†Ä‚†Ä‚¢â‚†õ‚†õ‚†õ‚†õ‚†ã‚†Å‚†§‚°Ä‚†à‚†ô‚†ò‚†Ü‚°á‚¢∏‚†à‚£∑‚£¶‚£ç‚°Ä‚†Ñ‚°Ä‚†â‚†à‚†É‚¢ø‚†Ä‚£ø‚¢∏‚£≠‚£∑‚£¶‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
     ‚ñà‚ñà‚ñà‚ñà  SILK CLAW MARKETPLACE v3.1  ‚ñà‚ñà‚ñà‚ñà   [SECURE NODE: ACTIVE]
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
[CRYPTO EXCHANGE NODE] ‚Äî SILK CLAW MARKETPLACE v3.1
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
Status: ACTIVE ‚îÇ Wallet Integration: ENABLED ‚îÇ Escrow: SECURED
Wallet: ${user_wallet['balance']:.2f}        | Inventory: 
     {bag_black_market['crypto_coin']}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ID   ‚îÇ ITEM/DESCRIPTION                  ‚îÇ PURCHASE VALUE
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 001  ‚îÇ üï± Shadowcoin (SHC)                ‚îÇ ${bm_crypto_exchange_page_coin_prices[0]:.2f}
 002  ‚îÇ ‚öì Dreadnaught (DNT)              ‚îÇ ${bm_crypto_exchange_page_coin_prices[1]:.2f}
 003  ‚îÇ üêç Chimera (CMR)                  ‚îÇ ${bm_crypto_exchange_page_coin_prices[2]:.2f}
 004  ‚îÇ ‚ú¥ Aetherium (AET)                 ‚îÇ ${bm_crypto_exchange_page_coin_prices[3]:.2f}
 005  ‚îÇ üåë Aphelion (APH)                 ‚îÇ ${bm_crypto_exchange_page_coin_prices[4]:.2f}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
[1] Purchase Coin
[2] Dump Coin
[3] Return to Access Gate """)  
            print("""‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ""")
            black_market_page_crypto_coin_user_input = input('Enter your choice: ')

            if black_market_page_crypto_coin_user_input == '1':
                 os.system('cls' if os.name == 'nt' else 'clear') 
                #  print("    üîó Initiating encrypted uplink to the terminal nexus...")
                #  time.sleep(1.5)
                #  print("    üîê Validating PGP keys and executing secure handshake...")
                #  time.sleep(1.5)
                #  print("    üîÑ Synchronizing transaction logs and validating cipher chains...")
                #  time.sleep(1.5)
                #  os.system('cls' if os.name == 'nt' else 'clear') 
                #  print("    üü¢ Connection established. Market is online. Stay anonymous.")
                #  time.sleep(2)
                
                 black_market_page_crypto_coin_purchase_coin_page()
            
def black_market_page_crypto_coin_purchase_coin_page():
            os.system('cls' if os.name=='nt' else 'clear')
            tx_hash = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
            print(f"""
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
[CRYPTO EXCHANGE || PURCHASE NODE] ‚Äî SILK CLAW MARKETPLACE v3.1
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
Status: ACTIVE ‚îÇ Wallet Integration: ENABLED ‚îÇ Escrow: SECURED
Wallet: ${user_wallet['balance']:.2f}        | Inventory: {bag_black_market['crypto_coin']}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 ID   ‚îÇ ITEM/DESCRIPTION                  ‚îÇ PURCHASE VALUE
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 001  ‚îÇ üï± Shadowcoin (SHC)                ‚îÇ ${bm_crypto_exchange_page_coin_prices[0]:.2f}
 002  ‚îÇ ‚öì Dreadnaught (DNT)              ‚îÇ ${bm_crypto_exchange_page_coin_prices[1]:.2f}
 003  ‚îÇ üêç Chimera (CMR)                  ‚îÇ ${bm_crypto_exchange_page_coin_prices[2]:.2f}
 004  ‚îÇ ‚ú¥ Aetherium (AET)                 ‚îÇ ${bm_crypto_exchange_page_coin_prices[3]:.2f}
 005  ‚îÇ üåë Aphelion (APH)                 ‚îÇ ${bm_crypto_exchange_page_coin_prices[4]:.2f}
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
""")


            print("""
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà                                                                    ‚ñà
‚ñà  ‚¨õ SILK CLAW SECURE TRANSACTION PROTOCOL ‚¨õ                       ‚ñà
‚ñà                                                                    ‚ñà  
‚ñà  [ENCRYPTED] TOR://v3.onion/secure-payment                         ‚ñà
‚ñà  [STATUS] AUTHENTICATED | ESCROW ENABLED | SSL 256-BIT             ‚ñà
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà
‚ñà                                                                    ‚ñà
‚ñà  ‚ö†Ô∏è  ENTER TRANSACTION DETAILS - ALL DATA IS ENCRYPTED  ‚ö†Ô∏è          ‚ñà
‚ñà                                                                    ‚ñà
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
""")
            black_market_page_crypto_coin_purchase_coin_page_receipt_coinname = input('[INPUT] ‚¨õ TARGET ASSET ID: ')
            if len(black_market_page_crypto_coin_purchase_coin_page_receipt_coinname.strip()) == 0:
                        black_market_page_crypto_coin_purchase_coin_page()
            black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity_input = input('[INPUT] üì¶ QUANTITY UNITS: ')
            if len(black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity_input.strip()) == 0:
                         black_market_page_crypto_coin_purchase_coin_page()

            black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity = int(black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity_input)

            black_market_page_crypto_coin_purchase_coin_page_receipt_coinnconfirmation= input('[CONFIRM] ‚úÖ AUTHORIZE TRANSACTION (Y/N): ')

            if black_market_page_crypto_coin_purchase_coin_page_receipt_coinnconfirmation == 'y':
                if black_market_page_crypto_coin_purchase_coin_page_receipt_coinname == '001':
                    total = bm_crypto_exchange_page_coin_prices[0] * black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity
                    black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased = 'üï± Shadowcoin (SHC)'
                elif black_market_page_crypto_coin_purchase_coin_page_receipt_coinname == '002':
                    total = bm_crypto_exchange_page_coin_prices[0] * black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity
                    black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased = '‚öì Dreadnaught (DNT)'
                elif black_market_page_crypto_coin_purchase_coin_page_receipt_coinname == '003':
                    total = bm_crypto_exchange_page_coin_prices[0] * black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity
                    black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased = 'üêç Chimera (CMR)'
                elif black_market_page_crypto_coin_purchase_coin_page_receipt_coinname == '004':
                    total = bm_crypto_exchange_page_coin_prices[0] * black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity
                    black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased = '‚ú¥ Aetherium (AET)'
                elif black_market_page_crypto_coin_purchase_coin_page_receipt_coinname == '005':
                    total = bm_crypto_exchange_page_coin_prices[0] * black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity
                    black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased = 'üåë Aphelion (APH)'
                else:
                    print('\n‚ùå Product Unavailable!')
                    time.sleep(2)
                    return  black_market_page_crypto_coin_purchase_coin_page()
                

                if user_wallet['balance'] >= total:
                    user_wallet['balance'] -= total
                    if 'crypto_coin' not in bag_black_market or not isinstance(bag_black_market['crypto_coin'], dict):
                        bag_black_market['crypto_coin'] = {}
                    
                    if black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased in bag_black_market['crypto_coin']:
                        bag_black_market['crypto_coin'][black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased] += black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity
                    else:
                        bag_black_market['crypto_coin'][black_market_page_crypto_coin_purchase_coin_page_receipt_coinname_purchased] = black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity
                    # time.sleep(1)

                    # print("\n\n")
                    # print(" ¬† ¬†‚û°Ô∏è Executing decentralized transaction. Awaiting block confirmation...")
                    # time.sleep(2)
                    # print(" ¬† ¬†‚úÖ Transaction hash generated and validated. Escrow release initiated...")
                    # time.sleep(3)
                    print(f"""
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
 ‚ñà‚ñà‚ñà‚ñà  SILK CLAW TRANSACTION RECEIPT  ‚ñà‚ñà‚ñà‚ñà   [TX: CONFIRMED]
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
 Session: {session_code_first_num}{session_code_letters}-{session_code_second_num} ‚îÇ Hash: {tx_hash}
 Node: SECURE ‚îÇ Protocol: ONION://v3 ‚îÇ Status: COMPLETE
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 Operation: Crypto Exchange    ‚îÇ Asset: {black_market_page_crypto_coin_purchase_coin_page_receipt_coinname}
 Quantity: {black_market_page_crypto_coin_purchase_coin_page_receipt_coinquantity:<13}       ‚îÇ Value: ${total:.2f}
 Wallet Balance: ${user_wallet['balance']:.2f}       ‚îÇ Escrow: RELEASED
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 [ENCRYPTED] ALL DATA ANONYMIZED ‚îÇ TX IRREVERSIBLE
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
""")
                else:
                    print('‚ùå Transaction failed: Insufficient funds!')
                    time.sleep(2)
                    return black_market_page_crypto_coin()
                time.sleep(2)
                return black_market_page_crypto_coin()
            elif black_market_page_crypto_coin_purchase_coin_page_receipt_coinnconfirmation == 'n':
                 print('‚ùå Transaction cancelled!')
                 time.sleep(2)
                 return black_market_page_crypto_coin()
            else:
                 print('‚ùå Command Unavailable!')
                 time.sleep(2)
                 return black_market_page()
                    

# 'R' COMMAND, BUYING AND SELLING

def coins_page():
    global user_wallet
    os.system('cls' if os.name == 'nt' else 'clear')
    time.sleep(1)
    coin_names = ['|ü¶å| ByteBucks(BYB)', '|üåô | LunaMint(LMT)', '|ü¶†| Vironix(VRX)', '|‚õΩ| HexaFuel(HXF)', '|‚ùå| OpalX(OPX)', '|üå±| TerraGreen(TGR)', '|üí°| Lumina(LMN)', '|‚öôÔ∏è| GearCoin(GRC)', '|ü™ê| Cosmic(CSC)', '|‚ö°Ô∏è| VoltFlux(VFX)']
    marketcap_projection = random.uniform(1.0, 205.0)    
    tradingvol_projection = random.uniform(10., 999.0) 
    orders_of_magnitude = random.choice(['B', 'T'])



    print(f"""
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë      üèõÔ∏è  Coin$hell Trading                                                               ‚ïë
    ‚ïë      DIGITAL WEALTH MANAGEMENT SUITE                üìà Markets: OPEN                    ‚ïë
    ‚ïë      Institutional Trading Platform v12.4.1         üîí Session: Encrypted               ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïö
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
               Coin$hell LLC | Member FINRA/SIPC | FDIC Insured | SOX Compliant
           ¬© 2025 Coin$hell & Co. All rights reserved. | Regulatory: SEC/CFTC Licensed
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   1. {coin_names[0]}   ‚îÇ     ‚îÇ  2. {coin_names[1]}    ‚îÇ     ‚îÇ  3. {coin_names[2]}      ‚îÇ
‚îÇ                            ‚îÇ     |                            ‚îÇ     ‚îÇ                            ‚îÇ
‚îÇ        $ {coin_prices_high_range[0]:.2f}                          $ {coin_prices_mid_range[1]:.2f}                          $ {coin_prices_mid_range[0]:.2f}            
‚îÇ                            ‚îÇ     ‚îÇ                            ‚îÇ     ‚îÇ                            ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   4. {coin_names[3]}    ‚îÇ     ‚îÇ      5. {coin_names[4]}    ‚îÇ     |  6. {coin_names[5]}   ‚îÇ
‚îÇ                            ‚îÇ     |                            ‚îÇ     ‚îÇ                            ‚îÇ
‚îÇ        $ {coin_prices_high_range[1]:.2f}                           $ {coin_prices_high_range[2]:.2f}                        $ {coin_prices_low_range[1]:.2f}            
‚îÇ                            ‚îÇ     ‚îÇ                            ‚îÇ     ‚îÇ                            ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ     7. {coin_names[6]}    ‚îÇ     ‚îÇ    8. {coin_names[7]}    ‚îÇ     |  9. {coin_names[8]}       ‚îÇ
‚îÇ                            ‚îÇ     |                            ‚îÇ     ‚îÇ                            ‚îÇ
‚îÇ        $ {coin_prices_low_range[2]:.2f}                           $ {coin_prices_mid_range[3]:.2f}                        $ {coin_prices_mid_range[2]:.2f}            
‚îÇ                            ‚îÇ     ‚îÇ                            ‚îÇ     ‚îÇ                            ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  
‚îÇ    10. {coin_names[9]}  ‚îÇ  
‚îÇ                            ‚îÇ  
‚îÇ          $ {coin_prices_low_range[0]:.2f}          
‚îÇ                            ‚îÇ   
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  

\nüíº Portfolio Balance: ${user_wallet['balance']:.2f}   ||  üîí Account Status: VERIFIED ‚úì
üìä Market Cap: ${marketcap_projection:.2f}{orders_of_magnitude}   ||  ‚ö° Current Market Trading Volume: ${tradingvol_projection:.2f}
üéí Inventory: {bag['coins_owned']}
""") 
    
    coins_page_dashboard_choice = input(
"""[b] üü¢ Buy     [s] üî¥ Sell     [e] üö™ Return to Home
""") 
    print("""
‚îå‚îÄ INSTITUTIONAL SERVICES ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üìû Private Banking: 1-800-CSH-PRIME ‚îÇ üåê Research Portal: csh.com/research    ‚îÇ
‚îÇ üí¨ Concierge: Available 24/7/365    ‚îÇ üìß Support: institutional@coinshell.com ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
Coin$hell LLC | Member FINRA/SIPC | FDIC Insured | SOX Compliant
¬© 2025 Coin$hell & Co. All rights reserved. | Regulatory: SEC/CFTC Licensed
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê""") 

    
    if coins_page_dashboard_choice == 'b':
               coins_page_buy_command()
            
    elif coins_page_dashboard_choice == 's':
               coins_page_sell_command()

    elif coins_page_dashboard_choice == 'e':
               return 'back'






def coins_page_buy_command():
    os.system('cls' if os.name=='nt' else 'clear')
    coin_names = ['|ü¶å| ByteBucks(BYB)', '|üåô| LunaMint(LMT)', '|ü¶†| Vironix(VRX)', '|‚õΩ| HexaFuel(HXF)', '|‚ùå| OpalX(OPX)', '|üå±| TerraGreen(TGR)', '|üí°| Lumina(LMN)', '|‚öôÔ∏è| GearCoin(GRC)', '|ü™ê| Cosmic(CSC)', '|‚ö°Ô∏è| VoltFlux(VFX)']

    print(f"""
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë OFFICIAL CRYPTO PURCHASE PORTAL ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñà
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë                         üìà LIVE MARKET BOARD                               ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     #      ‚ïë NAME                    ‚ïë PRICE (USD)                         ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     1      ‚ïë {coin_names[0]}     ‚ïë $ {coin_prices_high_range[0]:.2f}
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     2      ‚ïë {coin_names[1]}      ‚ïë $ {coin_prices_mid_range[1]:.2f}  
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     3      ‚ïë {coin_names[2]}       ‚ïë $ {coin_prices_mid_range[ 0]:.2f}     
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     4      ‚ïë {coin_names[3]}      ‚ïë $ {coin_prices_high_range[1]:.2f} 
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     5      ‚ïë {coin_names[4]}         ‚ïë $ {coin_prices_high_range[2]:.2f}   
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     6      ‚ïë {coin_names[5]}    ‚ïë $ {coin_prices_low_range[1]:.2f}   
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     7      ‚ïë {coin_names[6]}        ‚ïë $ {coin_prices_low_range[2]:.2f}    
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     8      ‚ïë {coin_names[7]}       ‚ïë $ {coin_prices_mid_range[3]:.2f}    
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     9      ‚ïë {coin_names[8]}        ‚ïë $ {coin_prices_mid_range[2]:.2f}       
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     10     ‚ïë {coin_names[9]}      ‚ïë $ {coin_prices_low_range[0]:.2f}      
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
""")
    coin_to_be_purchased_name = input('ü™ô  TARGET ASSET ID: ') #FIX THIS MAKE SURE THAT IF THE INPUT STATEMTNS AT EMPTY IT WOULD CIRCLE BACK TO THE DEF
    if len(coin_to_be_purchased_name.strip()) == 0:
         return coins_page_buy_command()

    coin_to_be_purchased_quantity_input = input('üì¶ QUANITTY UNITS: ')
    if len(coin_to_be_purchased_quantity_input.strip()) == 0:
         return coins_page_buy_command()

    coin_to_be_purchased_quantity = int(coin_to_be_purchased_quantity_input)
    coin_to_be_purchased_confirmation = input('‚úÖ AUTHORIZE PURCHASE (y/n): ')

    total = 0
    coin_name = ''

    if coin_to_be_purchased_name == '1':
        if coin_prices_high_range[0] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_high_range[0] * coin_to_be_purchased_quantity
        coin_name = 'ByteBucks'
    elif coin_to_be_purchased_name == '2':
        if coin_prices_mid_range[1] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_mid_range[1] * coin_to_be_purchased_quantity
        coin_name = "LunaMint"
    elif coin_to_be_purchased_name == '3':
        if coin_prices_mid_range[0] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_mid_range[0] * coin_to_be_purchased_quantity
        coin_name = "Vironix"
    elif coin_to_be_purchased_name == '4':
        if coin_prices_high_range[1] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_high_range[1] * coin_to_be_purchased_quantity
        coin_name = "HexaFuel"
    elif coin_to_be_purchased_name == '5':
        if coin_prices_high_range[2] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_high_range[2] * coin_to_be_purchased_quantity
        coin_name = "OpalX"
    elif coin_to_be_purchased_name == '6':
        if coin_prices_low_range[1] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_low_range[1] * coin_to_be_purchased_quantity
        coin_name = "TerraGreem"
    elif coin_to_be_purchased_name == '7':
        if coin_prices_low_range[2] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_low_range[2] * coin_to_be_purchased_quantity
        coin_name = "Lumina"
    elif coin_to_be_purchased_name == '8':
        if coin_prices_mid_range[3] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_mid_range[3] * coin_to_be_purchased_quantity
        coin_name = "Gearcoin"
    elif coin_to_be_purchased_name == '9':
        if coin_prices_mid_range[2] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_mid_range[2] * coin_to_be_purchased_quantity
        coin_name = "Cosmic"
    elif coin_to_be_purchased_name == '10':
        if coin_prices_low_range[0] <= 0:
            print('‚ùå Transaction failed: Cannot buy a coin with a value of $0 or less.')
            time.sleep(2)
            return
        total = coin_prices_low_range[0] * coin_to_be_purchased_quantity
        coin_name = "Voltflux"
    else:
        print("\n‚ùå Invalid coin selection!")
        time.sleep(2)
        return coins_page()

    if coin_to_be_purchased_confirmation.lower() == 'y':
        if user_wallet['balance'] >= total:
            user_wallet['balance'] -= total
            if 'coins_owned' not in bag or not isinstance(bag['coins_owned'], dict):
                bag['coins_owned'] = {}
            
            if coin_name in bag['coins_owned']:
                bag['coins_owned'][coin_name] += coin_to_be_purchased_quantity
            else:
                bag['coins_owned'][coin_name] = coin_to_be_purchased_quantity
            time.sleep(1)
            os.system('cls' if os.name=='nt' else 'clear')
            print("\n\n")
            print(" ¬† ¬†‚û°Ô∏è Processing digital asset order - pending network settlement confirmation...")
            time.sleep(2)
            print(" ¬† ¬†‚úÖ Settlement reference issued in verified - custodial release in progress...")
            time.sleep(3)
            print(f"""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë üí≥  OFFICIAL TRANSACTION RECEIPT                         ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë üìÖ DATE & TIME   : {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}                   ‚ïë
‚ïë üÜî TRANSACTION ID:  CHANGE THISSS                        ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë üí∞ ASSET NAME    : {coin_to_be_purchased_name:<34}       
‚ïë üì¶ QUANTITY      : {coin_to_be_purchased_quantity:<34}   
‚ïë üíµ TOTAL AMOUNT  : ${total:,.2f}{" " * (34 - len(f"{total:,.2f}"))}
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë ‚úÖ STATUS        : CONFIRMED                             ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
‚îå‚îÄ INSTITUTIONAL SERVICES ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üìû Private Banking: 1-800-CSH-PRIME ‚îÇ üåê Research Portal: csh.com/research    ‚îÇ
‚îÇ üí¨ Concierge: Available 24/7/365    ‚îÇ üìß Support: institutional@coinshell.com ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

üí∞ New Balance: ${user_wallet['balance']:.2f}
""")
            time.sleep(3)
            return coins_page()
            # print('return to coins page ni sya')
        else:
            print('‚ùå Transaction failed: Insufficient funds!')
            time.sleep(2)
            return coins_page_buy_command()
        
    elif coin_to_be_purchased_confirmation.lower() == 'n':
        print('‚ùå Order Canceled!')
        time.sleep(2)
        return coins_page()

    else:
        print('‚ùå Command Unavailable!')
        time.sleep(2)
        return coins_page_buy_command()





def coins_page_sell_command():
    os.system('cls' if os.name=='nt' else 'clear')
    coin_names = ['|ü¶å| ByteBucks(BYB)', '|üåô| LunaMint(LMT)', '|ü¶†| Vironix(VRX)', '|‚õΩ| HexaFuel(HXF)', '|‚ùå| OpalX(OPX)', '|üå±| TerraGreen(TGR)', '|üí°| Lumina(LMN)', '|‚öôÔ∏è| GearCoin(GRC)', '|ü™ê| Cosmic(CSC)', '|‚ö°Ô∏è| VoltFlux(VFX)']
    print(f"""
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ñà ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë OFFICIAL CRYPTO PURCHASE PORTAL ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñà
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë                         üìà LIVE MARKET BOARD                               ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     #      ‚ïë NAME                    ‚ïë PRICE (USD)                         ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¨‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     1      ‚ïë {coin_names[0]}     ‚ïë $ {coin_sell_prices_high_range[0]:.2f}
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     2      ‚ïë {coin_names[1]}      ‚ïë $ {coin_sell_prices_mid_range[1]:.2f}  
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     3      ‚ïë {coin_names[2]}       ‚ïë $ {coin_sell_prices_mid_range[ 0]:.2f}     
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     4      ‚ïë {coin_names[3]}      ‚ïë $ {coin_sell_prices_high_range[1]:.2f} 
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     5      ‚ïë {coin_names[4]}         ‚ïë $ {coin_sell_prices_high_range[2]:.2f}   
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     6      ‚ïë {coin_names[5]}    ‚ïë $ {coin_sell_prices_low_range[1]:.2f}   
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     7      ‚ïë {coin_names[6]}        ‚ïë $ {coin_sell_prices_low_range[2]:.2f}    
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     8      ‚ïë {coin_names[7]}       ‚ïë $ {coin_sell_prices_mid_range[3]:.2f}    
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     9      ‚ïë {coin_names[8]}        ‚ïë $ {coin_sell_prices_mid_range[2]:.2f}       
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë     10     ‚ïë {coin_names[9]}      ‚ïë $ {coin_sell_prices_low_range[0]:.2f}      
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï©‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
""")
    coin_to_be_purchased_name = input('ü™ô  TARGET ASSET ID: ') #FIX THIS MAKE SURE THAT IF THE INPUT STATEMTNS AT EMPTY IT WOULD CIRCLE BACK TO THE DEF
    if len(coin_to_be_purchased_name.strip()) == 0:
         return coins_page_sell_command()

    coin_to_be_purchased_quantity_input = input('üì¶ QUANITTY UNITS: ')
    if len(coin_to_be_purchased_quantity_input.strip()) == 0:
         return coins_page_sell_command()

    coin_to_be_purchased_quantity = int(coin_to_be_purchased_quantity_input)
    coin_to_be_purchased_confirmation = input('‚úÖ AUTHORIZE PURCHASE (y/n): ')

    total = 0
    coin_name = ''

    if coin_to_be_purchased_name == '1':
        total = coin_sell_prices_high_range[0] * coin_to_be_purchased_quantity
        coin_name = 'ByteBucks'
    elif coin_to_be_purchased_name == '2':
        total = coin_sell_prices_mid_range[1] * coin_to_be_purchased_quantity
        coin_name = "LunaMint"
    elif coin_to_be_purchased_name == '3':
        total = coin_sell_prices_mid_range[0] * coin_to_be_purchased_quantity
        coin_name = "Vironix"
    elif coin_to_be_purchased_name == '4':
        total = coin_sell_prices_high_range[1] * coin_to_be_purchased_quantity
        coin_name = "HexaFuel"
    elif coin_to_be_purchased_name == '5':
        total = coin_sell_prices_high_range[2] * coin_to_be_purchased_quantity
        coin_name = "OpalX"
    elif coin_to_be_purchased_name == '6':
        total = coin_sell_prices_low_range[1] * coin_to_be_purchased_quantity
        coin_name = "TerraGreem"
    elif coin_to_be_purchased_name == '7':
        total = coin_sell_prices_low_range[2] * coin_to_be_purchased_quantity
        coin_name = "Lumina"
    elif coin_to_be_purchased_name == '8':
        total = coin_sell_prices_mid_range[3] * coin_to_be_purchased_quantity
        coin_name = "Gearcoin"
    elif coin_to_be_purchased_name == '9':
        total = coin_sell_prices_mid_range[2] * coin_to_be_purchased_quantity
        coin_name = "Cosmic"
    elif coin_to_be_purchased_name == '10':
        total = coin_sell_prices_low_range[90] * coin_to_be_purchased_quantity
        coin_name = "Voltflux"
    else:
        print("\n‚ùå Invalid coin selection!")
        time.sleep(2)
        return coins_page()

    if coin_to_be_purchased_confirmation.lower() == 'y':
        if coin_name in bag['coins_owned'] and coin_to_be_purchased_quantity <= bag['coins_owned'][coin_name]:
            bag['coins_owned'][coin_name] += coin_to_be_purchased_quantity

            if bag['coins_owned'][coin_name] == 0:
                del bag['coins_owned'][coin_name]

            user_wallet['balance'] += total
        time.sleep(1)
        os.system('cls' if os.name=='nt' else 'clear')
        print("\n\n")
        print(" ¬† ¬†‚û°Ô∏è Initiating blockchain consensus protocol - awaiting validator signatures...")
        time.sleep(2)
        print(" ¬† ¬†‚úÖ Consensus achieved - smart contract execution and asset transfer authorized...")
        time.sleep(3)
        print(f"""
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë üí≥  OFFICIAL TRANSACTION RECEIPT                         ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë üìÖ DATE & TIME   : {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}                   ‚ïë
‚ïë üÜî TRANSACTION ID:  CHANGE THISSS                        ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë üí∞ ASSET NAME    : {coin_to_be_purchased_name:<34}       
‚ïë üì¶ QUANTITY      : {coin_to_be_purchased_quantity:<34}   
‚ïë üíµ TOTAL AMOUNT  : ${total:,.2f}{" " * (34 - len(f"{total:,.2f}"))}
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë ‚úÖ STATUS        : CONFIRMED                             ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
‚îå‚îÄ INSTITUTIONAL SERVICES ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ üìû Private Banking: 1-800-CSH-PRIME ‚îÇ üåê Research Portal: csh.com/research    ‚îÇ
‚îÇ üí¨ Concierge: Available 24/7/365    ‚îÇ üìß Support: institutional@coinshell.com ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

üí∞ New Balance: ${user_wallet['balance']:.2f}
""")

        time.sleep(3)
        return coins_page()


    elif coin_to_be_purchased_confirmation.lower() == 'n':
        print('‚ùå Order Canceled!')
        time.sleep(2)
        return coins_page()

    else:
        print('‚ùå Command Unavailable!')
        time.sleep(2)
        return coins_page()





#STARTING MESSAGE
def starting_message():
    os.system('cls' if os.name == 'nt' else 'clear')

    print("""

                                                        __        __   _                            _           ____      _        _  _          _ _ 
                                                        \ \      / /__| | ___ ___  _ __ ___   ___  | |_ ___    / ___|___ (_)_ __  | || |__   ___| | |
                                                         \ \ /\ / / _ \ |/ __/ _ \| '_ ` _ \ / _ \ | __/ _ \  | |   / _ \| | '_ \ / __) '_ \ / _ \ | |
                                                          \ V  V /  __/ | (_| (_) | | | | | |  __/ | || (_) | | |__| (_) | | | | \__ \ | | |  __/ | |
                                                           \_/\_/ \___|_|\___\___/|_| |_| |_|\___|  \__\___/   \____\___/|_|_| |_|___/_| |_|\___|_|_|

          """)
    time.sleep(0.2)
    print("""       
                                                                          Ready to dive into the wild world of crypto trading?
                                                                                    Here's what you need to know:

                                                                                    üíµ Starting Balance: $100
                                                                                   üíπ Market is LIVE and volatile
                                                                                  ‚åö Every second counts in crypto!

                                                                       Trade smart, trade fast, and may the profits be with you!"""
    )
    time.sleep(2)
    quick_scene(ceo_message, delay=0.01)
    time.sleep(1)
    Name = users_name_info()
    time.sleep(0.5)

    os.system('cls' if os.name == 'nt' else 'clear')
    print("Loading market data...")
    spinner = '-\\|/'
    for i in range(2): #CHANGE THIS SHIT BACK TO 100
                time.sleep(0.1)  
                
                
                print(f'\r{spinner[i % 4]} Processing... {i+1}%', end='')
    print("\n\nMarket loaded! Let's start gambl- trading I mean!")
    time.sleep(2)
    os.system('cls' if os.name == 'nt' else 'clear')






def main():
        starting_message()


        while True:
                os.system('cls' if os.name == 'nt' else 'clear')
                
                print('‚Ä¢ Market is OPEN!\n')
                line_graph.line_graphs()
                print(f'\nüë§: {Name}')
                print(f'üí∞ Wallet Balance: ${user_wallet['balance']:.2f}')
                print(f'üéí Inventory: {bag['coins_owned']}')
                fake_news.fake_news()
        
                        


                user_dashboard_choice = input("""\n(v) üìä View portfolio  |  (b) üï≥Ô∏è  Black market   |   (m) üìà View market  |  (r) ü™ô Purchase/sell coins  |  (e) üö™ Exit                       
""").strip().lower()
                if user_dashboard_choice == 'v':
                        os.system('cls' if os.name == 'nt' else 'clear')
                        print('portfolio logic')
                elif user_dashboard_choice == 'b':
                        black_market_page()
                elif user_dashboard_choice == 'm':
                        print('market logic')
                elif user_dashboard_choice == 'r':
                        coins_page()
                elif user_dashboard_choice == 'e':
                        break
                else:
                        print('Command Unavailable')
